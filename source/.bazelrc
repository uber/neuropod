# Always optimize
build --copt='-O3'

# Pass python virtual envs through to the test runner
build --test_env=VIRTUAL_ENV

# Use an internal toolchain to isolate the build from system libraries
build --crosstool_top=@llvm_toolchain//:toolchain

# Use C++11
build --cxxopt='-std=c++11'

# Build in a mostly-static way
build --dynamic_mode off

# We need this to be compatible with libtorch
build --cxxopt='-D_GLIBCXX_USE_CXX11_ABI=0'

# Disable strict python version checking added in Bazel 0.27
build --extra_toolchains=@bazel_tools//tools/python:autodetecting_toolchain_nonstrict

# Build with coverage info
build:coverage --copt='-fprofile-instr-generate' --copt='-fcoverage-mapping' --linkopt='-fprofile-instr-generate' --linkopt='-fcoverage-mapping'

# Use ASAN
build:asan -c dbg --copt='-fsanitize=address' --copt='-fno-omit-frame-pointer' --linkopt='-fsanitize=address' --test_env=ASAN_OPTIONS --test_env=ASAN_SYMBOLIZER_PATH

# For profiling builds
build:profile -c dbg --copt='-fno-omit-frame-pointer'
